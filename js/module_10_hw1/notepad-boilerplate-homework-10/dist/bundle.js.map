{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/shortid/lib/alphabet.js","webpack:///../node_modules/shortid/index.js","webpack:///../node_modules/shortid/lib/index.js","webpack:///../node_modules/shortid/lib/random/random-from-seed.js","webpack:///../node_modules/shortid/lib/build.js","webpack:///../node_modules/shortid/lib/generate.js","webpack:///../node_modules/shortid/lib/random/random-byte-browser.js","webpack:///../node_modules/nanoid/format.js","webpack:///../node_modules/shortid/lib/is-valid.js","webpack:///../node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack:///./js/utils/constants.js","webpack:///./js/utils/ref.js","webpack:///./js/utils/view.js","webpack:///./js/utils/app.js","webpack:///./js/utils/notepad-model.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","nextValue","Math","floor","push","splice","shuffle","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","REDUCE_TIME","version","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","mask","log","LN2","step","ceil","id","byte","RegExp","replace","test","PRIORITY_TYPES","LOW","NORMAL","HIGH","ICON_TYPES","NOTE_ACTIONS","ref","ul","document","querySelector","form","search","createElement","tag","className","classList","add","createActionButton","data","icon","actionBtn","dataset","action","actionIcon","textContent","appendChild","createSection","btnOneUp","iconOne","btnTwoDn","iconTwo","noteSection","append","createListItem","note","noteListItem","noteDiv","title","body","noteContent","noteTitle","noteBody","createNoteContent","priority","footer","notePriority","sectionOne","sectionTwo","createNoteFooter","renderNoteList","listRef","notes","renderList","map","innerHTML","notepad","constructor","this","_notes","saveNote","findNoteById","updateNotePriority","filterNotesByQuery","query","filteredNotes","hasQueryInTitle","toLowerCase","includes","hasQueryInBody","filterNotesByPriority","updateNoteContent","updatedContent","newUpdate","findIdIndex","findId","indexOf","deleteNote","foundId","addItem","titleInput","bodyText","newItem","shortid","initialNotes","addEventListener","evt","preventDefault","input","text","target","elements","trim","alert","inputValue","textValue","renderItem","parentNode","closest","remove","findNotes"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  var step = Math.ceil(1.6 * mask * size / alphabet.length)\n  size = +size\n\n  var id = ''\n  while (true) {\n    var bytes = random(step)\n    for (var i = 0; i < step; i++) {\n      var byte = bytes[i] & mask\n      if (alphabet[byte]) {\n        id += alphabet[byte]\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","export const PRIORITY_TYPES = {\n  LOW: 0,\n  NORMAL: 1,\n  HIGH: 2,\n};\n\nexport const ICON_TYPES = {\n  EDIT: 'edit',\n  DELETE: 'delete',\n  ARROW_DOWN: 'expand_more',\n  ARROW_UP: 'expand_less',\n};\n\nexport const NOTE_ACTIONS = {\n  DELETE: 'delete-note',\n  EDIT: 'edit-note',\n  INCREASE_PRIORITY: 'increase-priority',\n  DECREASE_PRIORITY: 'decrease-priority',\n};\n","export const ref = {  \r\n    ul: document.querySelector('.note-list'),\r\n    form: document.querySelector('.note-editor'),  \r\n    search: document.querySelector('.search-form'),  \r\n    };","import { ICON_TYPES, NOTE_ACTIONS } from './constants';\r\n\r\n// Element with a tag and a class\r\nconst createElement = (tag, ...className) => {\r\n    const createElement = document.createElement(tag);  \r\n    createElement.classList.add(...className);  \r\n    return createElement;  \r\n    };   \r\n  // Creating notes content\r\n    const createNoteContent = (title, body) => {\r\n      const noteContent = createElement('div', 'note__content');\r\n      const noteTitle = createElement('h2', 'note__title');\r\n      noteTitle.textContent = title;\r\n      const noteBody = createElement('p', 'note__body');\r\n      noteBody.textContent = body;\r\n      noteContent.append(noteTitle, noteBody);\r\n      return noteContent;\r\n    }; \r\n  // Action buttons\r\n    const createActionButton = (data, icon) => {\r\n      const actionBtn = createElement('button', 'action');\r\n      actionBtn.dataset.action = data;\r\n      const actionIcon = createElement('i', 'material-icons');\r\n      actionIcon.classList.add('action__icon');\r\n      actionIcon.textContent = icon;\r\n      actionBtn.appendChild(actionIcon);\r\n      return actionBtn;\r\n    };\r\n  // Section with buttons\r\n  const createSection = (btnOneUp, iconOne, btnTwoDn, iconTwo) => {\r\n    const noteSection = createElement('secton', 'note__section');\r\n    noteSection.append(\r\n    createActionButton(btnOneUp, iconOne),\r\n    createActionButton(btnTwoDn, iconTwo));\r\n    return noteSection;\r\n  } \r\n  // Footer\r\n  const createNoteFooter = (priority) => {\r\n    const footer = createElement('footer', 'note__footer');\r\n    const notePriority = createElement('span', 'note__priority');  \r\n     notePriority.textContent = `Priority: ${priority}`;\r\n     const sectionOne = createSection(NOTE_ACTIONS.DECREASE_PRIORITY,\r\n          ICON_TYPES.ARROW_DOWN,\r\n          NOTE_ACTIONS.INCREASE_PRIORITY,\r\n      ICON_TYPES.ARROW_UP); \r\n     const sectionTwo = createSection(NOTE_ACTIONS.EDIT,\r\n      ICON_TYPES.EDIT,\r\n      NOTE_ACTIONS.DELETE,\r\n      ICON_TYPES.DELETE);\r\n      \r\n      sectionOne.appendChild(notePriority);\r\n        footer.append(\r\n          sectionOne,\r\n          sectionTwo\r\n      );\r\n      return footer;\r\n  };\r\n  //List-item\r\n  export const createListItem = (note) => {\r\n      const noteListItem = createElement('li', 'note-list__item');\r\n      noteListItem.dataset.id = note.id;\r\n      const noteDiv = createElement('div', 'note');\r\n      noteDiv.append(createNoteContent(note.title, note.body), createNoteFooter(note.priority));\r\n      noteListItem.appendChild(noteDiv);\r\n      return noteListItem;\r\n  };\r\n  //Rendering\r\n  export const renderNoteList = (listRef, notes) => {\r\n    \r\n    const renderList = notes.map(note => createListItem(note));\r\n    listRef.innerHTML = '';\r\n    listRef.append(...renderList);\r\n    \r\n    };  ","import Notepad from './notepad-model';\r\nimport initialNotes from '../../assets/notes.json';\r\nimport {NOTE_ACTIONS} from './constants';\r\nimport {ref} from './ref';\r\nimport {renderNoteList, createListItem} from './view';\r\n\r\n//notepad Sample\r\nconst notepad = new Notepad(initialNotes);\r\n\r\n//result function call \r\nrenderNoteList(ref.ul, notepad.notes); \r\n// add item to list\r\nconst addItem = evt => {\r\n  evt.preventDefault();\r\n  const [input, text] = evt.target.elements;\r\n  if(input.value.trim() === '' || text.value.trim() === '') {\r\n    alert('Do not leave empty spaces!');\r\n    ref.form.reset();\r\n    return;\r\n  }\r\n  const inputValue = input.value;\r\n  const textValue = text.value;\r\n  const item = notepad.addItem(inputValue, textValue);\r\n  const renderItem = createListItem(item);\r\n  ref.ul.append(renderItem);\r\n  ref.form.reset();  \r\n};\r\n// delete note\r\nconst removeItem = evt => {\r\n  const parentOfItemToDelete = evt.target.parentNode.dataset.action;\r\n  if(parentOfItemToDelete === NOTE_ACTIONS.DELETE)  {\r\n    const itemDelete = evt.target.closest('li');\r\n    itemDelete.remove();\r\n  }\r\n}\r\n// search note\r\nconst searchForm = evt => {\r\n  const findNotes = notepad.filterNotesByQuery(evt.target.value);\r\n  renderNoteList(ref.ul, findNotes); \r\n};\r\n// Event Listeners\r\nref.form.addEventListener('submit', addItem);\r\nref.ul.addEventListener('click', removeItem);\r\nref.search.addEventListener('input', searchForm);","import { PRIORITY_TYPES } from './constants';\r\nimport shortid from 'shortid';\r\n\r\nexport default class Notepad {\r\n    /*\r\n     * Перенеси свойства и методы конструктора в класс\r\n     *\r\n     * Замени метод getNotes геттером, чтобы можно было обратиться как notepad.notes,\r\n     * для этого создай свойство _notes, в котором храни массив заметок,\r\n     * а геттер notes возвращает значение этого поля\r\n     *\r\n     * Добавь статическое свойство Priority используя ключевое слово static\r\n     */\r\n    constructor(notes = []){\r\n        this._notes = notes;\r\n    };  \r\n\r\n    get notes() {\r\n        return this._notes;\r\n      };\r\n   \r\n    saveNote (note) {\r\n        /*\r\n         * Сохраняет заметку в массив notes\r\n         *\r\n         * Принимает: объект заметки\r\n         * Возвращает: сохраненную заметку\r\n         *          */        \r\n        this._notes.push(note);\r\n    };\r\n    findNoteById(id) {\r\n        /*\r\n         * Ищет заметку в массиве notes\r\n         *\r\n         * Принимает: идентификатор заметки\r\n         * Возвращает: заметку с совпавшим полем id или undefined если ничего не найдено\r\n         */\r\n         for(const note of this._notes) {\r\n             if(note.id === id) {\r\n                 return note;\r\n             };         \r\n         }; \r\n    };\r\n    updateNotePriority(id, priority) {\r\n    \r\n        /*\r\n     * Обновляет приоритет заметки\r\n     *\r\n     * Принимает: идентификатор заметки и ее новый приоритет\r\n     * Возвращает: обновленную заметку\r\n     */\r\n  \r\n     const note = this.findNoteById(id);\r\n  \r\n  \r\n     if(!note) return;\r\n  \r\n     note.priority = priority;\r\n    };\r\n    filterNotesByQuery(query = '') {\r\n        /*\r\n         * Фильтрует массив заметок по подстроке query.\r\n         * Если значение query есть в заголовке или теле заметки - она подходит\r\n         *\r\n         * Принимает: подстроку для поиска в title и body заметки\r\n         * Возвращает: новый массив заметок, контент которых содержит подстроку\r\n         */\r\n            const filteredNotes = [];\r\n            \r\n            for(const note of this.notes) {\r\n                const hasQueryInTitle = note.title\r\n                .toLowerCase()\r\n                .includes(query.toLowerCase());\r\n    \r\n                const hasQueryInBody = note.body\r\n                .toLowerCase()\r\n                .includes(query.toLowerCase());\r\n    \r\n                if(hasQueryInTitle || hasQueryInBody) {\r\n                    filteredNotes.push(note);\r\n                }            \r\n            }\r\n            return filteredNotes; \r\n      };\r\n      filterNotesByPriority(priority) {\r\n        /*\r\n         * Фильтрует массив заметок по значению приоритета\r\n         * Если значение priority совпадает с приоритетом заметки - она подходит\r\n         *\r\n         * Принимает: приоритет для поиска в свойстве priority заметки\r\n         * Возвращает: новый массив заметок с подходящим приоритетом\r\n         */    \r\n        const filteredNotes = [];   \r\n        for(const note of this.notes) {\r\n            const hasPriority = note.priority;\r\n    \r\n            if(hasPriority) {\r\n                filteredNotes.push(note);\r\n            };\r\n            return filteredNotes;\r\n        }    \r\n    \r\n      };\r\n    updateNoteContent(id, updatedContent) {\r\n        /*\r\n         * Обновляет контент заметки\r\n         * updatedContent - объект с полями вида {имя: значение, имя: значение}\r\n         * Свойств в объекте updatedContent может быть произвольное количество\r\n         *\r\n         * Принимает: идентификатор заметки и объект, полями которого надо обновить заметку\r\n         * Возвращает: обновленную заметку\r\n         */\r\n        let newUpdate;\r\n            let findIdIndex;\r\n            const findId = this.findNoteById(id);\r\n            if (findId.id === id) {\r\n              findIdIndex = this.notes.indexOf(findId);\r\n              newUpdate = {\r\n                  ...findId,\r\n                  ...updatedContent\r\n              };\r\n              this._notes[findIdIndex] = newUpdate;\r\n            }\r\n            return newUpdate;\r\n      };\r\n    deleteNote(id) {\r\n        /*\r\n         * Удаляет заметку по идентификатору из массива notes\r\n         *\r\n         * Принимает: идентификатор заметки\r\n         * Возвращает: ничего\r\n         */\r\n        const foundId = this.findNoteById(id);\r\n        if (foundId.id === id) {\r\n          this._notes.splice(this._notes.indexOf(foundId), 1)\r\n        }\r\n      };\r\n    addItem(titleInput, bodyText) {\r\n        const newItem = {\r\n          id: shortid.generate(),\r\n          title: titleInput,\r\n          body: bodyText,\r\n          priority: PRIORITY_TYPES.LOW,\r\n        };\r\n        this._notes.push(newItem);\r\n        return newItem;\r\n      }\r\n  };"],"sourceRoot":""}